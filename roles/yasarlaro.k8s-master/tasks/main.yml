---
# tasks file for yasarlaro.k8s-master
# References:
#   kubernetes: 
#     - https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
#     - https://kubernetes.io/docs/setup/production-environment/container-runtimes/
#   docker:
#     - https://docs.docker.com/install/linux/docker-ce/centos/
#     - https://docs.docker.com/install/linux/linux-postinstall/


- name: Disable and stop firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: Switch iptables tooling to legacy mode
  shell: update-alternatives --set iptables /usr/sbin/iptables-legacy
  ignore_errors: yes

- name: Disable SELinux
  selinux:
    state: disabled

- name: Install required packages
  yum:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present
    
- name: Set up the stable Docker repository for CentOS.  
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: "Install {{ docker_version }} version of Docker Engine - Community Edition"
  yum:
    name:
      - "docker-ce-{{ docker_version }}"
    state: present
  
- name: Create docker directory
  file:
    path: /etc/docker
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Copy daemon configuration
  copy: 
    src: daemon.json
    dest: /etc/docker/daemon.json
    mode: 0644
    owner: root
    group: root

- name: Create docker system directory
  file:
    path: /etc/systemd/system/docker.service.d
    recurse: true
    state: directory

- name: "Add {{ run_user }} user to docker group"
  user:
    name: "{{ run_user }}"
    group: docker

- name: Start and enable docker service
  service:
    name: docker
    enabled: yes
    state: started
    daemon_reload: yes

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  loop:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Adding yum repository for Kubernetes
  yum_repository:
    name: kubernetes
    description: Kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: 
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg    

- name: "Install Kubernetes v{{ k8s_version }} binaries"
  yum: 
    name:
      - "kubelet-{{ k8s_version }}"
      - "kubeadm-{{ k8s_version }}"
      - "kubectl-{{ k8s_version }}"
    state: present
    disable_excludes: kubernetes

- name: Enable kubelet
  service:
    name: kubelet
    enabled: yes

- name: Reload sysctl
  sysctl:
    name: "{{ item }}"
    value: '1'
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables

- name: Initialize the Kubernetes cluster using kubeadm
  command: 'kubeadm init --apiserver-advertise-address="{{ ansible_default_ipv4.address }}" --apiserver-cert-extra-sans="{{ ansible_default_ipv4.address }}" --node-name {{ ansible_hostname }} --pod-network-cidr="{{ pod_subnet }}/{{ pod_cidr }}"'

- name: "Setup kubeconfig for {{ run_user }} user"
  file:
    path: "/home/{{ run_user }}/.kube"
    state: directory
    recurse: yes
    owner: "{{ run_user }}"
    group: "{{ run_user }}"

- name: "Copy kube configuration for {{ run_user }} user"
  copy:
    src: /etc/kubernetes/admin.conf
    remote_src: yes
    dest: "/home/{{ run_user }}/.kube/config"
    mode: 0644
    owner: "{{ run_user }}"
    group: "{{ run_user }}"

- name: Deploy calico yaml to server
  template:
    src: "calico_v{{ calico_version }}.yaml.j2"
    dest: /tmp/calico.yaml
    owner: "{{ run_user }}"
    group: "{{ run_user }}"
    mode: 0644

- name: Deploy a pod network to the cluster
  become: false
  command: kubectl create -f /tmp/calico.yaml

- name: Generate join command
  shell: 
    cmd: "kubeadm token create --print-join-command | head -1 > /tmp/kube_join_token"

- name: Restart kubelet
  service:
    name: kubelet
    state: restarted

- name: Fetch the token to localhost
  fetch:
    src: /tmp/kube_join_token
    dest: ./kube_join_token
    flat: yes

- name: Remove token file
  file:
    path: /tmp/kube_join_token
    state: absent
